Option Explicit

'-------------------------------------------------------------------
' Module-level Constants
'-------------------------------------------------------------------
Private Const INPUT_SHEET_NAME As String = "IntakeForm"
Private Const DATA_SHEET_NAME As String = "IntakeData"

'==============================================
' Main Sub: SubmitIntake
'==============================================
Public Sub SubmitIntake()
    On Error GoTo ErrHandler

    ' Disable screen updating & auto-calculation for performance
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual

    Dim wsInput As Worksheet, wsData As Worksheet
    Set wsInput = ThisWorkbook.Sheets(INPUT_SHEET_NAME)
    Set wsData = ThisWorkbook.Sheets(DATA_SHEET_NAME)

    ' Validate required fields (B2:B7)
    If Not ValidateForm(wsInput) Then
        MsgBox "Please fill in all required fields.", vbExclamation, "Missing Information"
        wsInput.Activate
        GoTo CleanExit
    End If

    ' Determine next available Entry ID
    Dim entryId As Long
    entryId = GetNextEntryId(wsData)

    ' Display the email and ask for confirmation before sending
    If SendEmail(wsInput, entryId) Then
        ' Save to IntakeData
        SaveFormData wsInput, wsData, entryId
        ' Clear IntakeForm fields
        ClearForm wsInput
        ' Format the data sheet
        FormatDataSheet wsData

        MsgBox "Entry #" & entryId & " has been processed successfully!", vbInformation, "Submission Successful"
        wsInput.Activate
        wsInput.Range("B2").Select
    Else
        MsgBox "Email was not sent. Data was not saved.", vbExclamation, "Process Canceled"
    End If

CleanExit:
    ' Restore application settings
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
    Exit Sub

ErrHandler:
    MsgBox "Error: " & Err.Description & " (Error No: " & Err.Number & ")", vbCritical, "Unexpected Error"
    Resume CleanExit
End Sub

'==============================================
' Function: ValidateForm
' Checks that required fields in IntakeForm are not empty.
'==============================================
Private Function ValidateForm(ws As Worksheet) As Boolean
    Dim cell As Range
    For Each cell In ws.Range("B2:B7")
        If Len(Trim(cell.Value)) = 0 Then
            cell.Select
            ValidateForm = False
            Exit Function
        End If
    Next cell
    ValidateForm = True
End Function

'==============================================
' Function: GetNextEntryId
' Returns the next available Entry ID from IntakeData.
'==============================================
Private Function GetNextEntryId(wsData As Worksheet) As Long
    Dim lastRow As Long
    lastRow = wsData.Cells(wsData.Rows.Count, "A").End(xlUp).Row
    GetNextEntryId = IIf(lastRow < 2, 1, wsData.Cells(lastRow, "A").Value + 1)
End Function

'==============================================
' Function: SendEmail
' Prepares an email and asks the user for confirmation before sending.
'==============================================
Private Function SendEmail(wsInput As Worksheet, entryId As Long) As Boolean
    On Error GoTo EmailError

    Dim outApp As Object, outMail As Object
    Set outApp = CreateObject("Outlook.Application")
    Set outMail = outApp.CreateItem(0)

    ' Prepare email content
    With outMail
        .To = wsInput.Range("B3").Value   ' Recipient email
        .Subject = "Form Submission #" & entryId
        .HTMLBody = BuildEmailHTML(wsInput, entryId)
        .Display  ' Show email for review
    End With

    ' Confirm before sending
    Dim userResponse As VbMsgBoxResult
    userResponse = MsgBox("Do you want to send this email now?", vbQuestion + vbYesNo, "Confirm Email Send")

    If userResponse = vbYes Then
        ' Try to send the email
        On Error Resume Next
        outMail.Send
        If Err.Number = 0 Then
            SendEmail = True   ' Mark as successfully sent
        Else
            MsgBox "Failed to send email: " & Err.Description, vbExclamation, "Email Error"
            SendEmail = False
        End If
        On Error GoTo 0
    Else
        MsgBox "Email was not sent. No data was saved.", vbInformation, "Action Canceled"
        SendEmail = False
    End If

    ' Ensure objects are properly released
    Set outMail = Nothing
    Set outApp = Nothing
    Exit Function

EmailError:
    MsgBox "Email error: " & Err.Description & " (Error No: " & Err.Number & ")", vbExclamation, "Email Issue"
    Set outMail = Nothing
    Set outApp = Nothing
    Resume Next
End Function

'==============================================
' Function: BuildEmailHTML
' Generates a well-formatted HTML email body.
'==============================================
Private Function BuildEmailHTML(ws As Worksheet, entryId As Long) As String
    Dim style As String
    style = "body{font:16px Arial;color:#333;background-color:#f4f4f4;}" & _
            "table{width:100%;border-collapse:collapse;margin:20px 0;}" & _
            "th,td{padding:10px;border:1px solid #ddd;text-align:left;}" & _
            "th{background-color:#007bff;color:white;font-weight:bold;}" & _
            "tr:nth-child(even){background-color:#f9f9f9;}" & _
            ".footer{text-align:center;color:#777;font-size:14px;margin-top:20px;}"

    Dim htmlBody As String
    htmlBody = "<html><head><style>" & style & "</style></head><body>" & _
               "<h2>Form Submission #" & entryId & "</h2>" & _
               "<table>" & _
               "<tr><th>Name</th><td>" & ws.Range("B2").Value & "</td></tr>" & _
               "<tr><th>Email</th><td>" & ws.Range("B3").Value & "</td></tr>" & _
               "<tr><th>Phone</th><td>" & ws.Range("B4").Value & "</td></tr>" & _
               "<tr><th>Company</th><td>" & ws.Range("B5").Value & "</td></tr>" & _
               "<tr><th>Title</th><td>" & ws.Range("B6").Value & "</td></tr>" & _
               "<tr><th>Department</th><td>" & ws.Range("B7").Value & "</td></tr>" & _
               "</table>" & _
               "<div class='footer'>This is an automated message. Please do not reply.</div>" & _
               "</body></html>"

    BuildEmailHTML = htmlBody
End Function

'==============================================
' Sub: SaveFormData
' Saves the form data into IntakeData after email is sent.
'==============================================
Private Sub SaveFormData(wsInput As Worksheet, wsData As Worksheet, entryId As Long)
    Dim nextRow As Long
    nextRow = wsData.Cells(wsData.Rows.Count, "A").End(xlUp).Row + 1

    wsData.Cells(nextRow, 1).Value = entryId
    wsData.Cells(nextRow, 2).Resize(1, 6).Value = wsInput.Range("B2:B7").Value
    wsData.Cells(nextRow, 8).Value = Now
    wsData.Cells(nextRow, 8).NumberFormat = "yyyy-mm-dd hh:mm:ss"
End Sub

'==============================================
' Sub: ClearForm
' Clears the IntakeForm fields after data is saved.
'==============================================
Private Sub ClearForm(ws As Worksheet)
    ws.Range("B2:B7").ClearContents
    ws.Range("B2").Select
End Sub
