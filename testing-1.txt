Option Explicit

Private Const INPUT_SHEET_NAME As String = "IntakeForm"
Private Const DATA_SHEET_NAME As String = "IntakeData"

Public Sub SubmitIntake()
    On Error GoTo ErrHandler

    ' Disable screen updating and calculations for speed
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual

    ' Initialize worksheets
    Dim wsInput As Worksheet, wsData As Worksheet
    Set wsInput = ThisWorkbook.Worksheets(INPUT_SHEET_NAME)
    Set wsData = ThisWorkbook.Worksheets(DATA_SHEET_NAME)

    ' Validate form
    If Not ValidateForm(wsInput) Then
        MsgBox "Please fill in all required fields", vbExclamation
        wsInput.Activate
        GoTo CleanExit
    End If

    ' Get next ID
    Dim entryId As Long
    entryId = GetNextEntryId(wsData)

    ' Try to send email
    If SendEmail(wsInput, entryId) Then
        ' If email sent successfully, then accumulate data
        SaveFormData wsInput, wsData, entryId

        ' Clear the form
        ClearForm wsInput

        ' Format the data sheet (Only if data was added)
        If wsData.Cells(wsData.Rows.Count, "A").End(xlUp).Row > 1 Then
            FormatDataSheet wsData
        End If

        ' Show success message
        MsgBox "Entry #" & entryId & " has been processed successfully", vbInformation

        ' Activate the input form for next entry
        wsInput.Activate
        wsInput.Range("B2").Select
    End If

CleanExit:
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
    Exit Sub

ErrHandler:
    MsgBox "Error: " & Err.Description & " (Error Number: " & Err.Number & ")", vbCritical
    Resume CleanExit
End Sub

Private Function ValidateForm(ws As Worksheet) As Boolean
    Dim cell As Range
    For Each cell In ws.Range("B2:B7")
        If Len(Trim(cell.Value)) = 0 Then
            cell.Select
            ValidateForm = False
            Exit Function
        End If
    Next cell
    ValidateForm = True
End Function

Private Function GetNextEntryId(wsData As Worksheet) As Long
    Dim lastRow As Long
    lastRow = wsData.Cells(wsData.Rows.Count, "A").End(xlUp).Row
    GetNextEntryId = IIf(lastRow = 1 And IsEmpty(wsData.Range("A1").Value), 1, IIf(lastRow = 1, 1, wsData.Cells(lastRow, 1).Value + 1))
End Function

Private Function SendEmail(wsInput As Worksheet, entryId As Long) As Boolean
    On Error GoTo EmailError

    Dim outApp As Object, outMail As Object
    Set outApp = CreateObject("Outlook.Application")
    Set outMail = outApp.CreateItem(0)

    With outMail
        .To = wsInput.Range("B3").Value ' Correct email address from the form
        .Subject = "Form Submission #" & entryId
        .HTMLBody = BuildEmailHTML(wsInput, entryId)

        .Display ' Display for preview

        If MsgBox("Send this email?", vbQuestion + vbYesNo) = vbYes Then
            On Error Resume Next
            .Send
            If Err.Number = 0 Then
                SendEmail = True
            Else
                MsgBox "Email send failed: " & Err.Description & ".  Please try again or send manually.", vbInformation
            End If
        End If
    End With

EmailCleanup:
    Set outMail = Nothing
    Set outApp = Nothing
    Exit Function

EmailError:
    MsgBox "Email error: " & Err.Description & " (Error Number: " & Err.Number & ")", vbExclamation
    Resume EmailCleanup
End Function

Private Function BuildEmailHTML(ws As Worksheet, entryId As Long) As String
    Dim style As String
    style = "body{font:13px Arial;color:#333}div{margin:8px 0}.card{max-width:500px;margin:auto;border:1px solid #ddd;border-radius:3px}" & _
            ".head{background:#f8f9fa;padding:12px;border-bottom:1px solid #ddd}.title{font-size:16px;font-weight:bold;color:#2b579a}" & _
            "table{width:100%;border-collapse:collapse;margin:12px}th{background:#f8f9fa;text-align:left}td,th{padding:8px;border:1px solid #ddd}" & _
            ".foot{background:#f8f9fa;padding:8px;text-align:center;color:#666;font-size:11px;border-top:1px solid #ddd}"

    Dim data As String
    data = "<div class='card'><div class='head'><div class='title'>Form Submission</div>Entry #" & entryId & "</div>" & _
            "<table><tr><th>Name</th><td>" & ws.Range("B2").Value & "</td></tr>" & _
            "<tr><th>Email</th><td>" & ws.Range("B3").Value & "</td></tr>" & _
            "<tr><th>Phone</th><td>" & ws.Range("B4").Value & "</td></tr>" & _
            "<tr><th>Company</th><td>" & ws.Range("B5").Value & "</td></tr>" & _
            "<tr><th>Title</th><td>" & ws.Range("B6").Value & "</td></tr>" & _
            "<tr><th>Department</th><td>" & ws.Range("B7").Value & "</td></tr></table>" & _
            "<div class='foot'>Automated message - Do not reply</div></div>"

    BuildEmailHTML = "<html><head><style>" & style & "</style></head><body>" & data & "</body></html>"
End Function

Private Sub SaveFormData(wsInput As Worksheet, wsData As Worksheet, entryId As Long)
    ' Initialize headers if needed (Improved check)
    If wsData.Cells(1, 1).Value = "" Then
        With wsData.Range("A1:H1")
            .Value = Array("Entry ID", "Name", "Email", "Phone", "Company", "Title", "Department", "Timestamp")
            .Font.Bold = True
            .Interior.Color = RGB(240, 240, 240)
        End With
    End If

    ' Find next row (reliable method)
    Dim nextRow As Long
    nextRow = wsData.Cells(wsData.Rows.Count, "A").End(xlUp).Row + 1

    ' Add new data
    With wsData
        .Cells(nextRow, 1).Value = entryId
        .Cells(nextRow, 2).Value = wsInput.Range("B2").Value
        .Cells(nextRow, 3).Value = wsInput.Range("B3").Value
        .Cells(nextRow, 4).Value = wsInput.Range("B4").Value
        .Cells(nextRow, 5).Value = wsInput.Range("B5").Value
        .Cells(nextRow, 6).Value = wsInput.Range("B6").Value
        .Cells(nextRow, 7).Value = wsInput.Range("B7").Value
        .Cells(nextRow, 8).Value = Now

        .Cells(nextRow, 8).NumberFormat = "yyyy-mm-dd hh:mm:ss"
    End With
End Sub

Private Sub FormatDataSheet(wsData As Worksheet)
    With wsData
        Dim usedRng As Range
        Set usedRng = .UsedRange

        usedRng.EntireColumn.AutoFit

        With usedRng.Font
            .Name = "Calibri"
            .Size = 11
        End With

        With .Range("A1:H1")
            .Font.Bold = True
            .Interior.Color = RGB(240, 240, 240)
            .Borders(xlBottom).LineStyle = xlContinuous
            .Borders(xlBottom).Weight = xlMedium
            .Borders(xlBottom).Color = RGB(180, 180, 180)
        End With

        Dim i As Long
        For i = 2 To usedRng.Rows.Count
            If i Mod 2 = 0 Then
                .Range("A" & i & ":H" & i).Interior.Color = RGB(252, 252, 252)
            End If
        Next i

        .Range("A2").Select
        Active
