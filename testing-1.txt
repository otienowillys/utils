Option Explicit

Private Const INPUT_SHEET_NAME As String = "IntakeForm"
Private Const DATA_SHEET_NAME As String = "IntakeData"

Public Sub SubmitIntake()
    On Error GoTo ErrHandler

    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual

    Dim wsInput As Worksheet, wsData As Worksheet
    Set wsInput = ThisWorkbook.Worksheets(INPUT_SHEET_NAME)
    Set wsData = ThisWorkbook.Worksheets(DATA_SHEET_NAME)

    If Not ValidateForm(wsInput) Then
        MsgBox "Please fill in all required fields", vbExclamation
        wsInput.Activate
        GoTo CleanExit
    End If

    Dim entryId As Long
    entryId = GetNextEntryId(wsData)

    If SendEmail(wsInput, entryId) Then
        SaveFormData wsInput, wsData, entryId
        ClearForm wsInput

        If wsData.Cells(wsData.Rows.Count, "A").End(xlUp).Row > 1 Then
            FormatDataSheet wsData
        End If

        MsgBox "Entry #" & entryId & " has been processed successfully", vbInformation
        wsInput.Activate
        wsInput.Range("B2").Select
    End If

CleanExit:
    Application.ScreenUpdating = True
    Application.Calculation = xlCalculationAutomatic
    Exit Sub

ErrHandler:
    MsgBox "Error: " & Err.Description & " (Error Number: " & Err.Number & ")", vbCritical
    Resume CleanExit
End Sub

Private Function ValidateForm(ws As Worksheet) As Boolean
    Dim cell As Range
    For Each cell In ws.Range("B2:B7")
        If Len(Trim(cell.Value)) = 0 Then
            cell.Select
            ValidateForm = False
            Exit Function
        End If
    Next cell
    ValidateForm = True
End Function

Private Function GetNextEntryId(wsData As Worksheet) As Long
    Dim lastRow As Long
    lastRow = wsData.Cells(wsData.Rows.Count, "A").End(xlUp).Row
    GetNextEntryId = IIf(lastRow = 1 And IsEmpty(wsData.Range("A1").Value), 1, IIf(lastRow = 1, 1, wsData.Cells(lastRow, 1).Value + 1))
End Function

Private Function SendEmail(wsInput As Worksheet, entryId As Long) As Boolean
    On Error GoTo EmailError

    Dim outApp As Object, outMail As Object
    Set outApp = CreateObject("Outlook.Application")
    Set outMail = outApp.CreateItem(0)

    With outMail
      .To = wsInput.Range("B3").Value ' Email from the form
      .Subject = "Form Submission #" & entryId
      .HTMLBody = BuildEmailHTML(wsInput, entryId)

      .Display

        If MsgBox("Send this email?", vbQuestion + vbYesNo) = vbYes Then
            On Error Resume Next
          .Send
            If Err.Number = 0 Then
                SendEmail = True
            Else
                MsgBox "Email send failed: " & Err.Description & ".  Please try again or send manually.", vbInformation
            End If
        End If
    End With

EmailCleanup:
    Set outMail = Nothing
    Set outApp = Nothing
    Exit Function

EmailError:
    MsgBox "Email error: " & Err.Description & " (Error Number: " & Err.Number & ")", vbExclamation
    Resume EmailCleanup
End Function

Private Function BuildEmailHTML(ws As Worksheet, entryId As Long) As String
    Dim style As String
    style = "body{font:16px Arial;color:#333;background-color:#f4f4f4;}" & _
            "table{width:90%;max-width:600px;margin:20px auto;border-collapse:collapse;box-shadow:0 4px 8px rgba(0,0,0,0.1);}" & _
            "th{background-color:#007bff;color:white;text-align:left;padding:12px;border-bottom:2px solid #ddd;font-weight:500;}" & _
            "td{background-color:white;padding:12px;border-bottom:1px solid #eee;}" & _
            "tr:hover{background-color:#f0f0f0;}" & _
            "h2{color:#333;text-align:center;margin-bottom:20px;}" & _
            ".footer{text-align:center;color:#777;font-size:14px;margin-top:20px;}"

    Dim data As String
    data = "<html><head><style>" & style & "</style></head><body>" & _
           "<h2>Form Submission #" & entryId & "</h2>" & _
           "<table>" & _
           "<tr><th>Name</th><td>" & ws.Range("B2").Value & "</td></tr>" & _
           "<tr><th>Email</th><td>" & ws.Range("B3").Value & "</td></tr>" & _
           "<tr><th>Phone</th><td>" & ws.Range("B4").Value & "</td></tr>" & _
           "<tr><th>Company</th><td>" & ws.Range("B5").Value & "</td></tr>" & _
           "<tr><th>Title</th><td>" & ws.Range("B6").Value & "</td></tr>" & _
           "<tr><th>Department</th><td>" & ws.Range("B7").Value & "</td></tr>" & _
           "</table>" & _
           "<div class='footer'>Automated message - Do not reply</div>" & _
           "</body></html>"

    BuildEmailHTML = data
End Function

Private Sub SaveFormData(wsInput As Worksheet, wsData As Worksheet, entryId As Long)
    If wsData.Cells(1, 1).Value = "" Then
        With wsData.Range("A1:H1")
          .Value = Array("Entry ID", "Name", "Email", "Phone", "Company", "Title", "Department", "Timestamp")
          .Font.Bold = True
          .Interior.Color = RGB(240, 240, 240)
        End With
    End If

    Dim nextRow As Long
    nextRow = wsData.Cells(wsData.Rows.Count, "A").End(xlUp).Row + 1

    With wsData
      .Cells(nextRow, 1).Value = entryId
      .Cells(nextRow, 2).Value = wsInput.Range("B2").Value
      .Cells(nextRow, 3).Value = wsInput.Range("B3").Value
      .Cells(nextRow, 4).Value = wsInput.Range("B4").Value
      .Cells(nextRow, 5).Value = wsInput.Range("B5").Value
      .Cells(nextRow, 6).Value = wsInput.Range("B6").Value
      .Cells(nextRow, 7).Value = wsInput.Range("B7").Value
      .Cells(nextRow, 8).Value = Now

      .Cells(nextRow, 8).NumberFormat = "yyyy-mm-dd hh:mm:ss"
    End With
End Sub

Option Explicit

'... (Other subs and functions are the same as the previous complete example)

Private Sub FormatDataSheet(wsData As Worksheet)
    With wsData
        Dim usedRng As Range
        Set usedRng =.UsedRange

        usedRng.EntireColumn.AutoFit

        With usedRng.Font
          .Name = "Calibri"
          .Size = 11
        End With

        With.Range("A1:H1")
          .Font.Bold = True
          .Interior.Color = RGB(240, 240, 240)
          .Borders(xlBottom).LineStyle = xlContinuous
          .Borders(xlBottom).Weight = xlMedium
          .Borders(xlBottom).Color = RGB(180, 180, 180)
        End With

        Dim i As Long
        For i = 2 To usedRng.Rows.Count
            If i Mod 2 = 0 Then
              .Range("A" & i & ":H" & i).Interior.Color = RGB(252, 252, 252)
            End If
        Next i

      .Range("A2").Select
        ActiveWindow.FreezePanes = True

      .Columns("A").ColumnWidth = 8
      .Columns("H").ColumnWidth = 18

      .Range("A2:A" & usedRng.Rows.Count).HorizontalAlignment = xlCenter
      .Range("H2:H" & usedRng.Rows.Count).NumberFormat = "yyyy-mm-dd hh:mm:ss"

        ActiveWindow.DisplayGridlines = False ' Optional: Remove gridlines
      .Range("A1").Select ' Select the first cell
    End With
End Sub ' This was the missing line!

Private Sub ClearForm(ws As Worksheet)
    ws.Range("B2:B7").ClearContents
    ws.Range("B2").Select
    ws.Activate
End Sub
