Option Explicit

Private Const INPUT_SHEET_NAME As String = "IntakeForm"
Private Const DATA_SHEET_NAME As String = "IntakeData"

Public Sub SubmitIntake()
    On Error GoTo ErrHandler
    
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    ' Get sheets
    Dim wsInput As Worksheet, wsData As Worksheet
    Set wsInput = ThisWorkbook.Worksheets(INPUT_SHEET_NAME)
    Set wsData = ThisWorkbook.Worksheets(DATA_SHEET_NAME)
    
    ' Validate data
    If Not ValidateForm(wsInput) Then
        MsgBox "Please fill in all required fields", vbExclamation
        GoTo CleanExit
    End If
    
    ' Get next ID and send email
    Dim entryId As Long
    entryId = GetNextEntryId(wsData)
    
    If Not SendEmail(wsInput, entryId) Then GoTo CleanExit
    
    ' Save data and clear form
    SaveFormData wsInput, wsData, entryId
    ClearForm wsInput
    
    MsgBox "Entry #" & entryId & " has been submitted successfully", vbInformation
    
CleanExit:
    Application.ScreenUpdating = True
    Application.EnableEvents = True
    Exit Sub
    
ErrHandler:
    MsgBox "Error: " & Err.Description, vbCritical
    Resume CleanExit
End Sub

Private Function ValidateForm(ws As Worksheet) As Boolean
    Dim inputRange As Range
    Set inputRange = ws.Range("B2:B7")
    
    Dim cell As Range
    For Each cell In inputRange
        If Len(Trim(cell.Value)) = 0 Then
            cell.Select
            ValidateForm = False
            Exit Function
        End If
    Next cell
    
    ValidateForm = True
End Function

Private Sub SaveFormData(wsInput As Worksheet, wsData As Worksheet, entryId As Long)
    ' Set up headers if needed
    If wsData.Range("A1").Value = "" Then
        With wsData
            .Range("A1").Value = "EntryID"
            .Range("B1").Value = "Name"
            .Range("C1").Value = "Email"
            .Range("D1").Value = "Phone"
            .Range("E1").Value = "Company"
            .Range("F1").Value = "Title"
            .Range("G1").Value = "Department"
            .Range("H1").Value = "Timestamp"
            
            .Range("A1:H1").Font.Bold = True
            .Range("A1:H1").Interior.Color = RGB(240, 240, 240)
        End With
    End If
    
    ' Find next row (reliable method)
    Dim nextRow As Long
    With wsData
        nextRow = .Range("A" & .Rows.Count).End(xlUp).Row + 1
        
        ' Save data
        .Range("A" & nextRow).Value = entryId
        .Range("B" & nextRow).Value = wsInput.Range("B2").Value
        .Range("C" & nextRow).Value = wsInput.Range("B3").Value
        .Range("D" & nextRow).Value = wsInput.Range("B4").Value
        .Range("E" & nextRow).Value = wsInput.Range("B5").Value
        .Range("F" & nextRow).Value = wsInput.Range("B6").Value
        .Range("G" & nextRow).Value = wsInput.Range("B7").Value
        .Range("H" & nextRow).Value = Now()
        
        ' Format timestamp
        .Range("H" & nextRow).NumberFormat = "yyyy-mm-dd hh:mm:ss"
        
        ' AutoFit and format
        .Range("A1:H" & nextRow).Borders.LineStyle = xlContinuous
        .UsedRange.EntireColumn.AutoFit
    End With
End Sub

Private Function GetNextEntryId(wsData As Worksheet) As Long
    Dim lastRow As Long
    lastRow = wsData.Range("A" & wsData.Rows.Count).End(xlUp).Row
    
    If lastRow = 1 Then
        GetNextEntryId = 1
    Else
        GetNextEntryId = wsData.Cells(lastRow, 1).Value + 1
    End If
End Function

Private Function SendEmail(wsInput As Worksheet, entryId As Long) As Boolean
    On Error GoTo EmailError
    
    Dim outlookApp As Object, outlookMail As Object
    Set outlookApp = CreateObject("Outlook.Application")
    Set outlookMail = outlookApp.CreateItem(0)
    
    With outlookMail
        .To = wsInput.Range("D2").Value
        .Subject = "Form Submission - Entry #" & entryId
        .HTMLBody = BuildEmailHTML(wsInput, entryId)
        .Display
        
        If MsgBox("Send this email now?", vbQuestion + vbYesNo) = vbYes Then
            .Send
            SendEmail = True
        End If
    End With
    
EmailCleanup:
    Set outlookMail = Nothing
    Set outlookApp = Nothing
    Exit Function
    
EmailError:
    MsgBox "Email error: " & Err.Description, vbExclamation
    Resume EmailCleanup
End Function

Private Function BuildEmailHTML(ws As Worksheet, entryId As Long) As String
    Dim html As String
    html = "<html><head><style>" & _
           "body{font:13px Arial;color:#333;line-height:1.4}" & _
           ".wrapper{max-width:500px;margin:auto;border:1px solid #ddd;border-radius:4px}" & _
           ".header{background:#f8f9fa;padding:15px;border-bottom:1px solid #ddd}" & _
           ".title{font-size:16px;font-weight:bold;color:#2b579a;margin-bottom:5px}" & _
           ".content{padding:15px}" & _
           "table{width:100%;border-collapse:collapse;margin:10px 0}" & _
           "th{background:#f8f9fa;padding:8px;text-align:left;font-weight:bold;border:1px solid #ddd}" & _
           "td{padding:8px;border:1px solid #ddd}" & _
           ".footer{background:#f8f9fa;padding:12px;text-align:center;color:#666;font-size:12px;border-top:1px solid #ddd}" & _
           "</style></head><body>" & _
           "<div class='wrapper'>" & _
           "<div class='header'>" & _
           "<div class='title'>Form Submission</div>" & _
           "<div>Entry #" & entryId & "</div>" & _
           "</div>" & _
           "<div class='content'>" & _
           "<table>" & _
           "<tr><th>Name</th><td>" & ws.Range("B2").Value & "</td></tr>" & _
           "<tr><th>Email</th><td>" & ws.Range("B3").Value & "</td></tr>" & _
           "<tr><th>Phone</th><td>" & ws.Range("B4").Value & "</td></tr>" & _
           "<tr><th>Company</th><td>" & ws.Range("B5").Value & "</td></tr>" & _
           "<tr><th>Title</th><td>" & ws.Range("B6").Value & "</td></tr>" & _
           "<tr><th>Department</th><td>" & ws.Range("B7").Value & "</td></tr>" & _
           "</table></div>" & _
           "<div class='footer'>Automated message - Do not reply</div>" & _
           "</div></body></html>"
           
    BuildEmailHTML = html
End Function

Private Sub ClearForm(ws As Worksheet)
    ws.Range("B2:B7").ClearContents
    ws.Range("B2").Select
End Sub
