
Sub AddRowAndCopyAboveWithValidationFixed()
    Dim selectedRow As Long
    Dim ws As Worksheet
    Dim cell As Range

    ' Set the active sheet
    Set ws = ActiveSheet

    ' Get the row number of the active cell
    selectedRow = ActiveCell.Row

    ' Insert a new row below the selected cell's row
    ws.Rows(selectedRow + 1).Insert Shift:=xlDown

    ' Copy the content from the row above the selected cell into the new row
    ws.Rows(selectedRow).Copy Destination:=ws.Rows(selectedRow + 1)

    ' Now, copy the data validation from each cell in the row above
    On Error Resume Next ' Ignore errors if cells do not have validation
    For Each cell In ws.Rows(selectedRow).Cells
        If cell.Validation.Type <> xlNone Then
            cell.Validation.Copy Destination:=ws.Cells(selectedRow + 1, cell.Column)
        End If
    Next cell
    On Error GoTo 0 ' Resume normal error handling

    ' Optionally, clear the active cell selection to avoid confusion
    ActiveCell.Offset(1, 0).Select
End Sub


Sub UndoAddRowAndCopyAboveWithValidation()
    Dim selectedRow As Long
    Dim ws As Worksheet
    
    ' Set the active sheet
    Set ws = ActiveSheet

    ' Get the row number of the active cell
    selectedRow = ActiveCell.Row

    ' Ensure that the row below the selected cell is deleted (undo the previous macro)
    If Not IsEmpty(ws.Cells(selectedRow + 1, 1)) Then
        ' Delete the row below the selected cell's row
        ws.Rows(selectedRow + 1).Delete Shift:=xlUp
    Else
        MsgBox "There is no row to delete."
    End If

    ' Optionally, clear the active cell selection to avoid confusion
    ActiveCell.Select
End Sub

Sub UndoAddRowAndCopyAbove()
    Dim selectedRow As Long
    Dim ws As Worksheet
    Dim response As VbMsgBoxResult

    ' Set the active sheet
    Set ws = ActiveSheet

    ' Get the row number of the active cell
    selectedRow = ActiveCell.Row

    ' Ask user if they want to proceed with deleting the row
    response = MsgBox("Are you sure you want to delete the row below?", vbYesNo + vbQuestion, "Delete Row Confirmation")

    ' If the user clicks 'Yes', proceed to delete the row
    If response = vbYes Then
        ' Delete the row immediately below the selected cell's row
        ws.Rows(selectedRow + 1).Delete Shift:=xlUp
        MsgBox "Row deleted.", vbInformation, "Success"
    Else
        MsgBox "Action canceled.", vbInformation, "Cancel"
    End If

    ' Optionally, clear the active cell selection to avoid confusion
    ActiveCell.Select
End Sub

Sub DeleteRowWithShape()
    Dim shp As Shape
    Dim ws As Worksheet
    Dim selectedRow As Long
    Dim response As VbMsgBoxResult
    
    ' Set the active sheet
    Set ws = ActiveSheet
    
    ' Get the shape (image or button) that triggered the macro
    Set shp = ws.Shapes(Application.Caller)

    ' Get the row number where the shape (image) is located
    selectedRow = shp.TopLeftCell.Row
    
    ' Ask the user if they want to proceed with deleting the row
    response = MsgBox("Are you sure you want to delete the row where this image is located?", vbYesNo + vbQuestion, "Delete Row Confirmation")

    ' If the user clicks 'Yes', proceed to delete the row
    If response = vbYes Then
        ' Delete the row where the shape is located
        ws.Rows(selectedRow).Delete Shift:=xlUp
        MsgBox "Row deleted.", vbInformation, "Success"
    Else
        MsgBox "Action canceled.", vbInformation, "Cancel"
    End If
End Sub


=TEXTJOIN("", TRUE, IF(ISNUMBER(MID(A1, ROW(INDIRECT("1:" & LEN(A1))), 1) * 1), MID(A1, ROW(INDIRECT("1:" & LEN(A1))), 1), ""))
=TEXTJOIN("", TRUE, IF(ISNUMBER(MID(A1, ROW(INDIRECT("1:" & LEN(A1))), 1) * 1) + (MID(A1, ROW(INDIRECT("1:" & LEN(A1))), 1)="."), MID(A1, ROW(INDIRECT("1:" & LEN(A1))), 1), ""))



