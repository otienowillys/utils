testing 

'use server'

import { prisma } from '@/lib/prisma'
import { revalidatePath } from 'next/cache'

interface GetNewsParams {
  page?: number
  limit?: number
  category?: string
}

export async function getNews({ 
  page = 1, 
  limit = 10, 
  category 
}: GetNewsParams = {}) {
  try {
    const skip = (page - 1) * limit
    
    const where = category ? { category } : {}
    
    const [news, total] = await Promise.all([
      prisma.news.findMany({
        where,
        skip,
        take: limit,
        orderBy: {
          createdAt: 'desc'
        },
        select: {
          id: true,
          title: true,
          content: true,
          image: true,
          category: true,
          createdAt: true
        }
      }),
      prisma.news.count({ where })
    ])
    
    revalidatePath('/');
    
    return {
      news,
      metadata: {
        total,
        page,
        totalPages: Math.ceil(total / limit)
      }
    }
  } catch (error: unknown) {
    console.error('Database error:', error);
    throw new Error(
      error instanceof Error 
        ? error.message 
        : 'Failed to fetch news'
    )
  }
}



// app/components/NewsList.tsx
'use client'

import { useEffect, useState } from 'react'
import { getNews } from '@/lib/actions'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { Button } from '@/components/ui/button'
import { Skeleton } from '@/components/ui/skeleton'

interface News {
  id: number
  title: string
  content: string
  image: string | null
  category: string
  createdAt: Date
}

interface NewsMetadata {
  total: number
  page: number
  totalPages: number
}

export default function NewsList() {
  const [news, setNews] = useState<News[]>([])
  const [metadata, setMetadata] = useState<NewsMetadata | null>(null)
  const [loading, setLoading] = useState(true)
  const [currentPage, setCurrentPage] = useState(1)

  useEffect(() => {
    fetchNews()
  }, [currentPage])

  const fetchNews = async () => {
    try {
      setLoading(true)
      const result = await getNews(currentPage)
      setNews(result.news)
      setMetadata(result.metadata)
    } catch (error) {
      console.error('Error fetching news:', error)
    } finally {
      setLoading(false)
    }
  }

  if (loading) {
    return (
      <div className="space-y-4">
        {[...Array(3)].map((_, i) => (
          <Card key={i} className="w-full">
            <CardHeader>
              <Skeleton className="h-4 w-2/3" />
            </CardHeader>
            <CardContent>
              <Skeleton className="h-24 w-full" />
            </CardContent>
          </Card>
        ))}
      </div>
    )
  }

  return (
    <div className="space-y-6">
      <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
        {news.map((item) => (
          <Card key={item.id} className="hover:shadow-lg transition-shadow">
            <CardHeader>
              <CardTitle className="line-clamp-2">{item.title}</CardTitle>
              <div className="text-sm text-gray-500">
                {new Date(item.createdAt).toLocaleDateString()}
              </div>
            </CardHeader>
            <CardContent>
              <p className="line-clamp-3 text-gray-600">{item.content}</p>
              <div className="mt-4">
                <span className="inline-block bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded">
                  {item.category}
                </span>
              </div>
            </CardContent>
          </Card>
        ))}
      </div>

      {metadata && (
        <div className="flex justify-center gap-2">
          <Button
            variant="outline"
            disabled={currentPage === 1}
            onClick={() => setCurrentPage((prev) => prev - 1)}
          >
            Previous
          </Button>
          <span className="py-2">
            Page {currentPage} of {metadata.totalPages}
          </span>
          <Button
            variant="outline"
            disabled={currentPage === metadata.totalPages}
            onClick={() => setCurrentPage((prev) => prev + 1)}
          >
            Next
          </Button>
        </div>
      )}
    </div>
  )
}







// app/page.tsx
import NewsList from '@/components/NewsList'

export default function HomePage() {
  return (
    <main className="container mx-auto py-8">
      <h1 className="text-3xl font-bold mb-8">Latest News</h1>
      <NewsList />
    </main>
  )
}








